>>> food_inspections_df[food_inspections_df.City != "CHICAGO"].City
148            NaN
346       CCHICAGO
745        Chicago
768            NaN
921            NaN
            ...   
153592     chicago
153606     Chicago
153613     Chicago
153621     Chicago
153624     chicago
Name: City, Length: 720, dtype: object

>>> food_inspections_df[food_inspections_df.Address.isna()]
Empty DataFrame
Columns: [Inspection ID, DBA Name, AKA Name, License #, Facility Type, Risk, Address, City, State, Zip, Inspection Date, Inspection Type, Results, Violations, Latitude, Longitude, Location]
Index: []

>>> food_inspections_df[food_inspections_df.Zip.isna()]
        Inspection ID  ...                                  Location
5927          2028349  ...   (41.90376892189224, -87.62853223878038)
7750          1995776  ...  (41.775402337592375, -87.72282206289516)
8422          1990124  ...   (41.87828615621557, -87.62780446623054)
8483          1990130  ...   (41.87828615621557, -87.62780446623054)
8491          1990118  ...   (41.87828615621557, -87.62780446623054)
...               ...  ...                                       ...
148531          80285  ...                                       NaN
149674          60405  ...                                       NaN
151437          63277  ...     (41.85155346052472, -87.715059286164)
153551          67807  ...     (41.85155346052472, -87.715059286164)
153613         154225  ...                                       NaN

[98 rows x 17 columns]

>>> food_inspections_df[food_inspections_df["Results"] == "No Entry"].groupby(food_inspections_df.Year).count()["Inspection ID"] / food_inspections_df.groupby(food_inspections_df.Year).count()["Inspection ID"]
Year
2010         NaN
2011         NaN
2012    0.012986
2013    0.033795
2014    0.035283
2015    0.042416
2016    0.046807
2017    0.049467

>>> food_inspections_df.groupby("Inspection Type").count()["Inspection ID"].tolist()
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 81712, 15620, 13897, 5645, 161, 44, 664, 1, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 2, 1, 2, 1, 19, 1, 1, 1, 2, 1, 1, 19800, 7228, 1, 605, 7, 1, 60, 1, 10, 10, 1, 22, 1, 284, 1, 44, 15, 1, 1, 2, 2, 205, 4, 1, 4, 1, 1, 2, 1, 5758, 113, 62, 1, 1, 702, 161, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 603, 254, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 4, 1, 1, 2, 1]

>>> food_inspections_df.groupby("Facility Type").count()["Inspection ID"].tolist()
[1, 2, 3, 15, 8, 8, 26, 3, 22, 2, 5, 1, 13, 1, 1, 2, 2, 25, 3, 4, 2, 6, 2, 13, 3, 1, 40, 11, 119, 5, 11, 5, 6, 3, 1, 4, 2, 8, 7, 2248, 9, 10, 6, 10, 4, 2, 6, 27, 2, 2, 5, 8, 1, 1, 3, 6, 3, 7, 15, 4, 2, 1, 2, 4, 5, 9, 2, 24, 24, 1, 3, 2, 10, 9, 5, 8, 4, 1, 7, 4, 3, 3, 10, 1, 21, 12, 39, 30, 1, 2, 2, 9, 8, 23, 7, 10, 3, 885, 2, 1704, 10, 3, 6, 3, 1, 9, 4, 5, 48, 3, 7, 2, 4, 6, 3, 6, 2, 4, 3, 2, 3, 2, 1, 4, 1, 7, 4, 1, 2393, 39, 196, 1686, 760, 10, 5, 2, 1, 5, 10, 1, 2, 4, 1, 1, 1, 1, 3, 100, 5, 2, 2, 2, 2, 19, 14, 10, 5, 3, 2, 1, 3, 5, 17, 1, 12, 7, 9, 12, 8, 5, 13, 5, 12, 6, 2, 8, 6, 5, 8, 1, 1, 40, 7, 2, 1, 2, 1, 1, 429, 16, 20551, 15, 3, 3, 1, 12, 1, 2, 1, 4, 4, 3, 1, 3, 5, 3, 1, 1, 2, 6, 17, 3, 1, 382, 3, 3, 15, 4, 3, 4, 11, 1, 102, 2, 1, 1, 2, 2, 2, 6, 2, 52, 4, 1, 8, 733, 13, 906, 16, 4, 4, 2, 2, 2, 4, 3, 1, 1, 1, 16, 4, 1, 18, 6, 1, 1, 11, 14, 3, 10, 10, 3, 1, 784, 388, 2, 3, 16, 33, 1, 2, 1, 1, 5, 3, 1, 6, 2, 1, 19, 2, 50, 2, 8, 5, 3, 5, 14, 3, 9, 8, 1, 4, 2, 3, 1, 1, 1, 33, 2, 1, 1, 10, 3, 2, 6, 4, 14, 5, 6, 1, 5, 8, 8, 1, 8, 7, 32, 2, 18, 4, 22, 11, 2, 9, 1, 4, 4, 5, 2, 11, 5, 5, 18, 29, 1, 2, 11, 6, 5, 5, 101230, 8, 8, 7, 1, 1, 1, 12, 5, 3, 2, 1, 34, 34, 2, 2, 5, 9652, 2, 63, 176, 39, 85, 2, 178, 8, 1, 201, 1, 1, 1, 1, 3, 2, 4, 3, 3, 16, 4, 12, 6, 15, 2, 2, 13, 1, 2, 2, 1, 2, 7, 1, 1, 1, 12, 6, 12, 511, 19, 2, 2, 6, 6, 3, 10, 2, 6, 9, 2, 3, 17, 15, 25, 9, 10, 1, 4, 7, 1, 12, 6, 3, 16, 6, 5, 8, 5, 3, 1, 3, 6, 3, 2, 6, 1, 6, 1, 5, 24, 2, 4, 2, 4, 2, 3, 3]
