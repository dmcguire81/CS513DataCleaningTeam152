[
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Inspection ID",
        "expression": "value.toNumber()",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column Inspection ID using expression value.toNumber()"
    },
    {
        "op": "core/multivalued-cell-split",
        "columnName": "Violations",
        "keyColumnName": "Inspection ID",
        "mode": "separator",
        "separator": "|",
        "regex": false,
        "description": "Split multi-valued cells in column Violations"
    },
    {
        "op": "core/fill-down",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Inspection ID",
        "description": "Fill down cells in column Inspection ID"
    },
    {
        "op": "core/column-split",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Violations",
        "guessCellType": true,
        "removeOriginalColumn": true,
        "mode": "separator",
        "separator": "- Comments:",
        "regex": false,
        "maxColumns": 2,
        "description": "Split column Violations by separator"
    },
    {
        "op": "core/column-split",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Violations 1",
        "guessCellType": true,
        "removeOriginalColumn": true,
        "mode": "separator",
        "separator": ".",
        "regex": false,
        "maxColumns": 2,
        "description": "Split column Violations 1 by separator"
    },
    {
        "op": "core/column-rename",
        "oldColumnName": "Violations 1 1",
        "newColumnName": "Violation ID",
        "description": "Rename column Violations 1 1 to Violation ID"
    },
    {
        "op": "core/column-rename",
        "oldColumnName": "Violations 1 2",
        "newColumnName": "Violation Title",
        "description": "Rename column Violations 1 2 to Violation Title"
    },
    {
        "op": "core/column-rename",
        "oldColumnName": "Violations 2",
        "newColumnName": "Violation Comments",
        "description": "Rename column Violations 2 to Violation Comments"
    },
    {
        "op": "core/row-removal",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Violation ID",
                    "expression": "isBlank(value)",
                    "columnName": "Violation ID",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "description": "Remove rows"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Violation Title",
        "expression": "value.trim()",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column Violation Title using expression value.trim()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Violation Comments",
        "expression": "value.trim()",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column Violation Comments using expression value.trim()"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Violation Comments",
        "expression": "value.replace(/\\s+/,' ')",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column Violation Comments using expression value.replace(/\\s+/,' ')"
    }
]